{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","setValue","onChange","e","target","baseUrl","personService","getAll","axios","get","then","resp","data","addPerson","newPerson","post","updatePerson","put","id","deletePerson","delete","PersonForm","persons","setPersons","setMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","found","find","person","name","successCallback","text","type","setTimeout","number","window","confirm","returnedPerson","map","p","catch","error","response","status","filter","concat","Person","onClick","Persons","useEffect","search","RegExp","Notification","className","App","keyword","setKeyword","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72507ddb.chunk.js","sourcesContent":["const Filter = ({value, setValue}) => (\n  <div>\n    filter shown with <input value={value} onChange={e => setValue(e.target.value)}/>\n  </div>\n)\n\nexport default Filter\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(resp => resp.data)\r\n}\r\n\r\nconst addPerson = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson).then(resp => resp.data)\r\n}\r\n\r\nconst updatePerson = (newPerson) => {\r\n  return axios.put(`${baseUrl}/${newPerson.id}`, newPerson)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst personService = {\r\n  getAll,\r\n  addPerson,\r\n  updatePerson,\r\n  deletePerson\r\n}\r\n\r\nexport default personService\r\n","import React, {useState} from 'react'\r\n\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = ({persons, setPersons, setMessage}) => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    // 查找是不是有重复的人\r\n    const found = persons.find(person => person.name === newName)\r\n    const successCallback = () => {\r\n      setNewName('')\r\n      setNewNumber('')\r\n      setMessage({\r\n        text: `Added ${newName}`,\r\n        type: 'success'\r\n      })\r\n      // 5 秒后清除消息\r\n      setTimeout(() => setMessage({text: '', type: ''}), 5000)\r\n    }\r\n\r\n    if (found) {\r\n      // 有则修改\r\n      const newPerson = {...found, number: newNumber}\r\n\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        personService.updatePerson(newPerson).then(resp => {\r\n          const returnedPerson = resp.data\r\n          setPersons(persons.map(p => p.id !== newPerson.id ? p : returnedPerson))\r\n          successCallback()\r\n        }).catch(error => {\r\n          if (error.response.status === 404) {\r\n            setPersons(persons.filter(p => p.id !== newPerson.id))\r\n            setMessage({\r\n              text: `Information of ${newName} has already been removed from server`,\r\n              type: 'error'\r\n            })\r\n            // 5 秒后清除消息\r\n            setTimeout(() => setMessage({text: '', type: ''}), 5000)\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      // 没有则新增\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      personService.addPerson(newPerson).then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        successCallback()\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>name: <input value={newName} onChange={e => setNewName(e.target.value)}/></div>\r\n      <div>number: <input value={newNumber} onChange={e => setNewNumber(e.target.value)}/></div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nexport default PersonForm\r\n","const Person = ({ person, deletePerson }) => (\r\n  <div>\r\n    {person.name} {person.number} <button onClick={deletePerson}>delete</button>\r\n  </div>\r\n)\r\n\r\nexport default Person\r\n","import React, { useEffect } from 'react'\r\n\r\nimport Person from './Person'\r\nimport personService from '../services/persons'\r\n\r\nconst Persons = ({ persons, filter, setPersons }) => {\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(persons => {\r\n      setPersons(persons)\r\n    })\r\n  }, [setPersons])\r\n\r\n  const deletePerson = person => {\r\n    if (window.confirm(`Delete ${person.name} ?`)){\r\n      personService.deletePerson(person.id).then(resp => {\r\n        setPersons(persons.filter(p => person.id !== p.id))\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        persons\r\n          .filter(person => person.name.search(new RegExp(filter, 'i')) !== -1)\r\n          .map(person => <Person key={person.id} person={person} deletePerson={() => deletePerson(person)}/>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Persons\r\n","import './Notification.css'\n\nconst Notification = ({text, type}) => {\n  if (text === '') {\n    return null\n  }\n\n  let className = 'message'\n  if (type === 'success') {\n    className += ' success'\n  } else if (type === 'error') {\n    className += ' error'\n  }\n\n  return (\n    <div className={className}>\n      {text}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState } from 'react'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [keyword, setKeyword] = useState('')\n  const [message, setMessage] = useState({text: '', type: ''})\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification text={message.text} type={message.type}/>\n      <Filter value={keyword} setValue={setKeyword}/>\n      <h3>add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} setMessage={setMessage}/>\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={keyword} setPersons={setPersons}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}